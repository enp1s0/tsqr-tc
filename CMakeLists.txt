CMAKE_MINIMUM_REQUIRED(VERSION 3.18)
PROJECT(tsqr-tc LANGUAGES CXX CUDA)

FIND_PACKAGE(CUDA 11.0 REQUIRED)

# CUDA/CXX
FOREACH(lang CXX CUDA)
    SET(CMAKE_${lang}_STANDARD          17)
    SET(CMAKE_${lang}_STANDARD_REQUIRED ON)
    SET(CMAKE_${lang}_EXTENSIONS        OFF)
ENDFOREACH()

# CUDA (1/2)
SET(CMAKE_CUDA_ARCHITECTURES 80 86)

# OpenMP
FIND_PACKAGE(OpenMP QUIET COMPONENTS CXX CUDA)

# Directories
SET(INCDIR include)
SET(SRCDIR src)
SET(LIBDIR lib)

# Source files
FILE(GLOB SRCS "${SRCDIR}/*.cu")
FILE(GLOB HEADERS "${INCDIR}/*.hpp")

ADD_LIBRARY(tsqr-tc STATIC
	${SRCS}
	${HEADERS}
	)

# Include directories
TARGET_INCLUDE_DIRECTORIES(tsqr-tc PUBLIC ${INCDIR})
TARGET_INCLUDE_DIRECTORIES(tsqr-tc PUBLIC ${SRCDIR}/cutf/include)
TARGET_INCLUDE_DIRECTORIES(tsqr-tc PUBLIC ${SRCDIR}/wmma_extension/include)
TARGET_INCLUDE_DIRECTORIES(tsqr-tc PUBLIC ${SRCDIR}/hmma.f32.f32/include)
TARGET_INCLUDE_DIRECTORIES(tsqr-tc PUBLIC ${SRCDIR}/gemm_core_cuh/include)

# CUDA (2/2)
SET_TARGET_PROPERTIES(tsqr-tc PROPERTIES CUDA_SEPARABLE_COMPILATION ON)

# Output
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${LIBDIR})
